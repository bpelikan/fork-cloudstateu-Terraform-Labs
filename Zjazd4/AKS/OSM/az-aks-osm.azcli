# How to create AKS cluster with OpenServiceMesh (https://openservicemesh.io/)

#Define some var's
rg=dev-prolab0-rg
n=aks-dev-02

# Add addon to make sure you will be able to use it
az aks enable-addons --addons open-service-mesh -g $rg -n $n

az aks show --resource-group $rg --name $n  --query 'addonProfiles.openServiceMesh.enabled'

az aks get-credentials -n $n -g $rg

kubectl get deployment -n kube-system osm-controller -o=jsonpath='{$.spec.template.spec.containers[:1].image}'

# Install the aks-preview extension
az extension add --name aks-preview

# Update the extension to make sure you have the latest version installed
az extension update --name aks-preview

# It may happen that you need to install preview feature to use Open Service Mesh
az feature register --namespace "Microsoft.ContainerService" --name "AKS-OpenServiceMesh"

# Create AKS cluster
az group create --name $rg --location $l
az aks create -n $aksname -g $rg --node-osdisk-type Ephemeral --node-osdisk-size 30 --network-plugin azure --enable-managed-identity --enable-addons open-service-mesh --generate-ssh-keys

# Check if the cluster 
az aks list -g $rg -o json | jq -r '.[].addonProfiles.openServiceMesh.enabled'

# SSH to AKS node
kubectl debug node/aks-nodepool1-11528196-vmss000000 -it --image=mcr.microsoft.com/aks/fundamental/base-ubuntu:v0.0.11

# Get credentials to the cluster
az aks get-credentials -n $aksname -g $rg

# Check all deployments to see if OpenServiceMesh is up and running
kubectl get deployments -n kube-system --selector app=osm-controller
kubectl get pods -n kube-system --selector app=osm-controller
kubectl get services -n kube-system --selector app=osm-controller

kubectl get deployment -n kube-system osm-controller -o=jsonpath='{$.spec.template.spec.containers[:1].image}'

# More info about OpenServiceMesh
https://mcr.microsoft.com/oss/openservicemesh/tags/list
https://mcr.microsoft.com/v2/oss/openservicemesh/osm-controller/tags/list

https://mcrflowprodcentralus.data.mcr.microsoft.com/mcrprodoverview/repolist?P1=1636275005&P2=1&P3=1&P4=M%2BipZkLsnC8G%2FDQMnfRmdSE8bc%2BepnIySvmFe40z0H4%3D&se=2021-11-07T08%3A50%3A05Z&sig=Zgj4%2FuVkv1hpEceFKtuVWpp0Sutzd6yszv%2BH%2FKfmv40%3D&sp=r&sr=b&sv=2015-02-21
oss/openservicemesh/osm-controller


Links:
https://docs.microsoft.com/en-us/azure/aks/open-service-mesh-azure-monitor
https://docs.microsoft.com/en-us/azure/aks/open-service-mesh-troubleshoot



az aks update -g dev-prolab0-rg -n aks-dev-02 --enable-aad --aad-admin-group-object-ids f5cd05bf-43bd-4a61-b72b-a7df6cc57d94

az aks update -g MyResourceGroup -n MyManagedCluster --enable-aad --aad-admin-group-object-ids f5cd05bf-4

TODO:
1) Nadać Dawidowi role RBAC Cluster Admin oraz Cluster Manager

2) Install osm tool on client
sudo snap install osmclient
sudo snap remove osmclient

https://release-v0-11.docs.openservicemesh.io/docs/guides/cli/

3)  Port forwarding
kubectl port-forward bookbuyer-86df7f6764-vwkn5 -n bookbuyer 8080:14001
kubectl get pod -n bookthief

docker pull openservicemesh/bookbuyer:v0.11.1
docker pull  openservicemesh/bookthief:v0.11.1
docker pull openservicemesh/bookstore:v0.11.1
docker pull openservicemesh/bookwarehouse:v0.11.1

acrpkobp.

docker tag openservicemesh/bookbuyer:v0.11.1 acrpkobp.azurecr.io/openservicemesh/bookbuyer:v0.11.1
docker tag  openservicemesh/bookthief:v0.11.1 acrpkobp.azurecr.io/openservicemesh/bookthief:v0.11.1
docker tag openservicemesh/bookstore:v0.11.1 acrpkobp.azurecr.io/openservicemesh/bookstore:v0.11.1 
docker tag openservicemesh/bookwarehouse:v0.11.1 acrpkobp.azurecr.io/openservicemesh/bookwarehouse:v0.11.1

docker push acrpkobp.azurecr.io/openservicemesh/bookbuyer:v0.11.1
docker push acrpkobp.azurecr.io/openservicemesh/bookthief:v0.11.1
docker push acrpkobp.azurecr.io/openservicemesh/bookstore:v0.11.1 
docker push acrpkobp.azurecr.io/openservicemesh/bookwarehouse:v0.11.1

https://release-v0-11.docs.openservicemesh.io/docs/getting_started/quickstart/manual_demo/

kubectl logs -n osm-system <TODO> -c fluentbit-logger

osm install --set=OpenServiceMesh.enableFluentbit=true --set=OpenServiceMesh.controllerLogLevel=trace

TODO: 

1) zmiana procesu instalacji - bank nie może pobierać paczek z docker.io
2) 


osm install --set=OpenServiceMesh.enablePermissiveTrafficPolicy=false --set=OpenServiceMesh.deployPrometheus=true --set=OpenServiceMesh.deployGrafana=true --set=OpenServiceMesh.deployJaeger=true --set=OpenServiceMesh.enableFluentbit=true --set=OpenServiceMesh.controllerLogLevel=trace
osm install --set=OpenServiceMesh.enablePermissiveTrafficPolicy=true --set=OpenServiceMesh.deployPrometheus=true --set=OpenServiceMesh.deployGrafana=true --set=OpenServiceMesh.deployJaeger=true,OpenServiceMesh.tracing.enable=true --set=OpenServiceMesh.enableFluentbit=true --set=OpenServiceMesh.controllerLogLevel=trace

osm install --set=OpenServiceMesh.enablePermissiveTrafficPolicy=false 

K8S_NAMESPACE="osm-system"
OSM_POD=$(kubectl get pods -n "$K8S_NAMESPACE" --no-headers  --selector app=jaeger | awk 'NR==1{print $1}')
kubectl port-forward -n "$K8S_NAMESPACE" "$OSM_POD"  16686:16686